{"version":3,"sources":["components/Button.tsx","components/Header.tsx","components/Task.tsx","components/Tasks.tsx","components/AddTasks.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Button","color","text","onClick","className","Header","title","hideAddTask","showaddtask","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","day","Tasks","tasks","map","AddTasks","onAdd","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","toString","currentTarget","App","setTasks","Boolean","showAddTask","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f854c43.chunk.js","sourcesContent":["/**\n * @summary Add Task Button Component\n *\n * @param {string} color\n * @param {string} text\n * @param {Function} onClick : toggle showAddTasks\n *\n * @returns Add task button\n */\nconst Button = ({\n  color = \"\",\n  text = \"\",\n  onClick = () => {},\n}: {\n  color: string;\n  text: string;\n  onClick: any;\n}) => {\n  return (\n    <button\n      className={\n        \"justify-end w-1/5 h-10 font-semibold text-center text-white bg-black rounded border-transparent hover:border-gray-900 border-2 \" +\n        color\n      }\n      onClick={onClick}\n    >\n      {text}\n    </button>\n  );\n};\n\nexport default Button;\n","import Button from \"./Button\";\n\n/** Task Header Component\n *\n * @param {string} title - Title of app\n * @param {Function} hideAddTask - toggle addTask component\n *\n * @returns Task Header\n */\nconst Header = ({\n  title = \"Reminder\",\n  hideAddTask = () => {},\n  showaddtask = false,\n}: {\n  title: string;\n  hideAddTask: Function;\n  showaddtask: Boolean;\n}) => {\n  return (\n    <header className=\"flex flex-row w-full h-16\">\n      <h1 className=\"w-4/5 text-4xl font-medium align-middle\">{title}</h1>\n      <Button\n        color={showaddtask ? \"bg-red-500\" : \"bg-green-500\"}\n        text={showaddtask ? \"Cancel\" : \"Add Tasks\"}\n        onClick={hideAddTask}\n      />\n    </header>\n  );\n};\n\nexport default Header;\n","import { FaTimes } from \"react-icons/fa\";\n\n/**\n * @summary Task Component lists tasks\n *\n * @param {Array} task array\n * @def {id, text, day, reminder} task\n *\n * @param {Function} onDelete : delete task\n * @param {Function} onToggle : toggle reminder\n *\n * @returns Single Task\n */\nconst Task = ({\n  task = [],\n  onDelete = () => {},\n  onToggle = () => {},\n}: {\n  task: any;\n  onDelete: Function;\n  onToggle: Function;\n}) => {\n  return (\n    <div\n      className={`w-full border-l-8 p-4 my-2 bg-yellow-100 rounded-md hover:bg-yellow-200 select-none ${\n        task.reminder ? \"border-green-500\" : \"border-transparent\"\n      }`}\n      onDoubleClick={() => {\n        onToggle(task.id);\n      }}\n    >\n      <h3 className=\"flex flex-row justify-between w-full text-xl font-semibold\">\n        {task.text}\n        <FaTimes\n          className=\"self-center text-red-300 rounded-full cursor-pointer hover:text-red-600\"\n          onClick={() => onDelete(task.id)}\n        />\n      </h3>\n      <p>{task.day}</p>\n    </div>\n  );\n};\n\nexport default Task;\n","import Task from \"./Task\";\n\n/** Tasks Component\n * @param {Array} task\n * @def {id, text, day, reminder} task\n *\n * @param {Function} onDelete : delete task\n * @param {Function} onToggle : toggle reminder\n *\n * @returns Tasks\n */\nconst Tasks = ({\n  tasks = [],\n  onDelete = () => {},\n  onToggle = () => {},\n}: {\n  tasks: any[];\n  onDelete: Function;\n  onToggle: Function;\n}) => {\n  return (\n    <>\n      {tasks.map((task) => (\n        <Task\n          key={task.id}\n          task={task}\n          onDelete={onDelete}\n          onToggle={onToggle}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default Tasks;\n","import { useState } from \"react\";\n\n/**\n * @summary gives ability to add tasks\n *\n * @param {Function} onAdd : add tasks\n */\nconst AddTasks = ({ onAdd = () => {} }: { onAdd: Function }) => {\n  /**\n   * State Updates\n   *\n   * @param {string} text - Text body of reminder\n   * @param {string} daytime - Day and Time of reminder\n   * @param {boolean} reminder - set reminder on/off\n   *\n   * @function setTime - update text\n   * @function setDayTime - update daytime\n   * @function setReminder - update reminder\n   *\n   * @returns void\n   */\n  const [text, setText] = useState(\"\");\n  const [day, setDay] = useState(\"\");\n  const [reminder, setReminder] = useState(false);\n\n  /**\n   * OnSubmit Event Function\n   * @param e : Event triggered\n   *\n   * @summary add new task of text,daytime,reminder\n   *\n   * @returns void\n   */\n  const onSubmit = (e: any) => {\n    // basic event validation\n    e.preventDefault();\n\n    // alerts\n    if (!text) {\n      alert(\"Please Add Tasks :)\");\n      return;\n    }\n    if (!day) {\n      alert(\"Please Add Date and Time :)\");\n      return;\n    }\n\n    // update state\n    onAdd({ text, day, reminder });\n\n    // clear states\n    setText(\"\");\n    setDay(\"\");\n    setReminder(false);\n  };\n\n  return (\n    <form\n      className={`absolute flex flex-col flex-wrap self-end p-5 mb-4 duration-200 transform translate-y-16 border-2 border-gray-500 shadow-2xl w-96 bg-gray-50 rounded-xl add-form`}\n      onSubmit={onSubmit}\n    >\n      <div className=\"py-4 form-control\">\n        <label className=\"text-xl font-semibold pr-28\">Task</label>\n        <input\n          className=\"px-2 py-1 font-semibold border-2 border-black rounded-md text-md\"\n          type=\"text\"\n          placeholder=\"Add New Task\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        />\n      </div>\n      <div className=\"py-4 form-control\">\n        <label className=\"pr-5 text-xl font-semibold\">Day and Time</label>\n        <input\n          className=\"px-2 py-1 font-semibold border-2 border-black rounded-md text-md\"\n          type=\"text\"\n          placeholder=\"Add Day and Time\"\n          value={day}\n          onChange={(e) => setDay(e.target.value)}\n        />\n      </div>\n      <div className=\"py-3 text-xl font-semibold form-control\">\n        <label className=\"pr-3\">Set Reminder?</label>\n        <input\n          type=\"checkbox\"\n          checked={reminder}\n          value={reminder.toString()}\n          onChange={(e) => setReminder(e.currentTarget.checked)}\n        />\n      </div>\n\n      <input className=\"py-2 my-4\" type=\"submit\" value=\"Save Task\" />\n    </form>\n  );\n};\n\nexport default AddTasks;\n","import { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTasks from \"./components/AddTasks\";\n\n/** Reminder Component\n * @returns App\n *\n * @author Abhinav Robinson\n */\nconst App: React.FC = () => {\n  /**\n   * TASKS STATE\n   *\n   * @summary staticly contains all task info\n   */\n  const [tasks, setTasks] = useState([\n    {\n      id: \"1\",\n      text: \"Coding Session with Codechef\",\n      day: \"Jan 28th at 3:30pm\",\n      reminder: true,\n    },\n    {\n      id: \"2\",\n      text: \"Meeting for Nudge App\",\n      day: \"Everyday at 8:45pm\",\n      reminder: false,\n    },\n    {\n      id: \"3\",\n      text: \"Workout\",\n      day: \"Everyday at 7:00pm\",\n      reminder: false,\n    },\n  ]);\n\n  /**\n   * DELETE TASK\n   *\n   * @summary delete the selected task\n   *\n   * @param {string} id\n   * @reutrns void\n   */\n  const deleteTask = (id: string) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  /**\n   * TOGGLE REMINDER\n   *\n   * @summary toggle reminder on/off on click event\n   *\n   * @param {string} id\n   * @returns void\n   */\n  const toggleReminder = (id: string) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    );\n  };\n\n  /**\n   * ADD TASKS\n   *\n   * @summary add new task to tasks array\n   *\n   * @returns void\n   */\n  const addTask = (task: any) => {\n    // generate random id\n    const id = Math.floor(Math.random() * 100000) + 1;\n\n    // Add new task\n    const newTask = { id, ...task };\n    setTasks([...tasks, newTask]);\n    // hide (close) add task\n    showAddTask(false);\n  };\n\n  /**\n   * SHOW ADD TASK STATE\n   *\n   * @param {Boolean} showaddtask - to show or not to show\n   * @param {Function} showAddTask - toggle showaddtask\n   */\n  const [showaddtask, showAddTask] = useState(Boolean);\n\n  /**\n   * @summary hide or show (toggle) add task\n   *\n   * @returns void\n   */\n  const hideAddTask = () => {\n    showAddTask(!showaddtask);\n  };\n\n  return (\n    <div className=\"flex items-center justify-center w-screen h-screen p-8 m-0 bg-gradient-to-tr from-yellow-500 to-red-300\">\n      <div className=\"flex flex-col w-2/3 h-auto max-w-screen-sm p-12 m-0 bg-white shadow-2xl rounded-xl\">\n        <Header\n          title=\"Reminder\"\n          hideAddTask={hideAddTask}\n          showaddtask={showaddtask}\n        />\n        {showaddtask && <AddTasks onAdd={addTask} />}\n        {/* if no tasks, show \"No tasks added\" */}\n        {tasks.length ? (\n          <Tasks\n            tasks={tasks}\n            onDelete={deleteTask}\n            onToggle={toggleReminder}\n          />\n        ) : (\n          \"No Tasks Added\"\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n/** Root Component\n * @returns React DOM 'root'\n */\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}